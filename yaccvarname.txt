%{
#include "y.tab.h"
%}

%%

[a-zA-Z][a-zA-Z0-9_]*     { yylval.str = strdup(yytext); return VAR; }
\n                        { return '\n'; }
.                         { return INVALID; }

%%


code.y->


%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int yylex(void);
int yyerror(char *s);

%}

%union {
    char* str;
}

%token <str> VAR
%token INVALID

%%

input:
    VAR '\n' { printf("Valid variable name: %s\n", $1); free($1); }
  | INVALID '\n' { printf("Invalid variable name.\n"); }
  ;

%%

int main() {
    printf("Enter a variable name:\n");
    yyparse();
    return 0;
}

int yyerror(char *s) {
    fprintf(stderr, "Syntax error: %s\n", s);
    return 0;
}
